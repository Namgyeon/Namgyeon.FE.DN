---
layout: post
title:  "다익스트라 알고리즘"
---

## 너비 우선 탐색 vs 다익스트라 알고리즘
너비 우선 탐색은 가장 적은 수의 구간을 가지는 경로를 찾아낸다. 만약 가장 빠른 경로를 찾고 싶다면 어떻게 해야 할까?
다익스트라 알고리즘이라고 하는 다른 알고리즘을 사용하면 최단 시간 경로를 구할 수 있다.

## 다익스트라 알고리즘
157p 그림 삽입
다익스트라 알고리즘은 4단계로 이루어 진다.
1. 가장 "가격"이 "싼" 정점을 찾는다. 가장 가격이 싼 정점이란 도달하는 데 시간이 가장 적게 걸리는 정점.
2. 이 정점의 이웃 정점들의 가격을 조사한다.
3. 그래프 상의 모든 정점에 대해 이러한 일을 반복.
4. 최종 경로를 계산한다.

다익스트라 알고리즘은 각 구간에 대해 숫자 혹은 가중치를 줄 수 있다. 그리고 전체 가중치의 합이 가장 작은 구간을 찾는다.
가중치를 가지는 그래프는 가중 그래프라고 한다. 가중치가 없는 그래프는 균일 그래프라고 한다.
균일 그래프에서 최단 경로를 계산할 때는 너비 우선 탐색을 사용한다. 가중 그래프에서 최단 경로를 계산할 때는 다익스트라 알고리즘 사용.

❇︎음의 가중치가 있으면 다익스트라 알고리즘을 시용할 수 없다. 음의 가중치 간선이 알고리즘을 망친다.
만약 음의 가중치를 가진 그래프에서 최단 경로를 찾고 싶으면 벨만-포드 알고리즘을 사용하면 된다.
